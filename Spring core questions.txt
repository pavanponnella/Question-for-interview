1. What are the design patterns?
  ans. Design patterns are used for best practises for writing code.
       ex:Factory Design, Micro design
2. Monolith vs Microservices architecture?
 ans. All functionalities are developing as single page are called Monolith arc.
      Developing functionalities as a small comoponents are called Microservices arc.
              ex: product, cart extc..
3.What is framework?
 ans. Frame work is a semideveloped software.[ It provides common logic which are required for application developement. ]
       ex: Hibernate,structs, spring etc...
4.what is Hibernate: 
 	ans It an ORM framework used to develop presistance layer.(CRUD)
5.what is Structs : 
	ans It is a web framework used to develop web layer.
6.what is Spring:
       ans. By using Spring we can develop end to end.
7.Spring Advantages?
  ans. 1.free and open source and light weight.
       2.it is versatile( adjustable easely for other framework )
       3.it is an non- invasive (it won't force to use any interface)
       4.Spring works on POJO and POJI model.
8. Note : Spring is loosely coupled 
9. What is inheritance and composition.
   ans. inheritance: creating new class for existing class called inheritance.
        Composition: creating an object of a class is called Composition.
10. Note : If you use inheritance and composition both are tightly coupled.
11. Spring core: 
   ans. Spring core suggests developer to follow "strategy design" pattern to develop classes, for loosely couple.
12. what is Strategy Design pattern?
   ans. it comes under behavioural design pattern.
        Rules:
              1.Favour composition over inhertance.
	      2.Code to interface instead of implementation classes.
              3.Code should be open for extension and closed for modification.
13.Note: Instaed of talking directly implementatin talk with interfaces.
14.What is Dependency Injection.? 
   ans. The process of intecting one class object into another class is called Dependency injection.
15. How many ways we can perform dependency injection.
  ans. 3-wasy: 1. setter injection
               2.constructor injection
               3.field injection
16. what is Setter injection?
 ans. The process of injection one class object into another class through setter is called setter injection.
17. what is constructor injection?
 ans. The process of injection one class object into another class through constructor is called constructor injection.
18. what is field injection?
 ans. The process of injection one class object into another class through constructor is called constructor injection.
19. what is IOC in spring?
   ans. It is a principle which is resposible to manage and colloborate depencies among the classes.
20. Note: In spring IOC will perform DI
21. How many ways you perform IOC?
      ans we can perform in 3-ways.
               1.XML config
               2.Anotation
               4.java config
          -------> We should tell IOC to these are the dependent classses and these are the target classes.
22.Note: Spring supports xml, Spring boot doesn't support xml.
23.property tag represents setter injection in xml file.
24.ref represents which object you are going to be inject.
25.getBean() method, it is used for creating object.
26. Note:If you use both setter & constructor setter injection will be override.
           ex: Demo d=new Demo()--------->Constructor first constructor will be created here
                    d.setPay()----------->
27.What is bean scope?
     ans. Bean means how many objects should be create.
          By default in spring boot bean scope is singleton(Means only one)
28.can we configure bean scope?
    ans. yes, 1.singleton
              2.prototype
	      3.request
	      4.session
29.Note: For prototype beans when ever we call .getBean() at that time only Object created.
30.
 
 
  



